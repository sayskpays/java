
-- DQL

SELECT * FROM HR.JOBS;

-- DML 

INSERT INTO HR.JOBS VALUES('AD_HONG','Master',30000,50000);

UPDATE HR.JOBS SET JOB_ID='AD_JUN' WHERE JOB_ID='AD_HONG';

DELETE FROM HR.JOBS WHERE JOB_ID='AD_HONG';

-- DDL

CREATE TABLE DEPT (DEPTNO NUMBER(4),DNAME VARCHAR2(20),LOC VARCHAR2(20));

ALTER TABLE DEPT MODIFY (DNAME VARCHAR2(30));

ALTER TABLE DEPT RENAME TO DEPT_01;

TRUNCATE TABLE DEPT_01;

DROP TABLE DEPT_01;

-- TCL

COMMIT;
ROLLBACK;
SAVEPOINT;

-- 데이터베이스 가동 중 인지 확인
SELECT status FROM V$instance;

-- 데이터베이스 가동
startup
-- 데이터베이스 중지
shutdown

/*산술/비교/논리 연산자
*/
SELECT JOB_ID,JOB_TITLE,MIN_SALARY,MAX_SALARY+100 FROM HR.JOBS;

SELECT JOB_ID,JOB_TITLE,MIN_SALARY,MAX_SALARY+100 FROM HR.JOBS
WHERE MIN_SALARY != 6000;

-- 2007년 1월 1일 이후인 데이터를 출력하는 쿼리
SELECT EMPLOYEE_ID, START_DATE, END_DATE,JOB_ID,DEPARTMENT_ID FROM HR.JOB_HISTORY WHERE START_DATE >= '2007-01-01';


-- BETWEEN AND 연산자
-- 10,000 미만 30,000 초과인 데이터만 조회
SELECT JOB_ID,JOB_TITLE,MIN_SALARY,MAX_SALARY FROM HR.JOBS WHERE MIN_SALARY NOT BETWEEN 10000 AND 30000;

-- IN
-- MIN_SALARY 컬럼에 2,500 , 5,500 값이 있는 데이터 조회
SELECT JOB_ID,JOB_TITLE,MIN_SALARY,MAX_SALARY FROM HR.JOBS WHERE MIN_SALARY IN (2500,5500);


-- LIKE 연산자 
-- PU로 시작하는 JOB_ID 출력
SELECT JOB_ID,JOB_TITLE,MIN_SALARY,MAX_SALARY FROM HR.JOBS WHERE JOB_ID LIKE 'PU%';

-- 이름의 두 번째 글자가 A인 사람을 찾는 쿼리문

SELECT JOB_ID,JOB_TITLE,MIN_SALARY,MAX_SALARY FROM HR.JOBS WHERE JOB_ID LIKE '_A%';

-- 컬럼에 _ 가 들어간 데이터만 출력 
SELECT JOB_ID,JOB_TITLE,MIN_SALARY,MAX_SALARY FROM HR.JOBS WHERE JOB_ID LIKE '%\_%' ESCAPE '\';


/* NULL 연산자
*/

-- 실행 불가
SELECT ENAME, JOB, COMM FROM EMP WHERE COMM=NULL;

-- 실행 가능
SELECT ENAME, JOB, COMM FROM EMP WHERE COMM IS NULL;
SELECT ENAME, JOB, COMM FROM EMP WHERE COMM IS NOT NULL;


-- ORDER BY 절
SELECT * FROM HR.JOB_HISTORY ORDER BY START_DATE DESC; 

/* DISTINCT ,별칭 , 연결 연산자
 * 동일한 데이터 값들이 중복되어 출력되지 않도록 사용한다.
*/
SELECT DISTINCT MAX_SALARY FROM HR.JOBS;

-- Alias
SELECT JOB_ID,JOB_TITLE,MIN_SALARY,MAX_SALARY AS MAX FROM HR.JOBS;

-- 연결 연산자
SELECT JOB_ID || '_EAI' FROM HR.JOBS;
SELECT JOB_ID || '_EAI'|| JOB_TITLE  FROM HR.JOBS;










